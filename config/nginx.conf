map $http_upgrade $connection_upgrade {
  'websocket' upgrade;
  default close;
}

proxy_cache_path  /var/cache/nginx_api_namedEntities levels=1 keys_zone=entities_api:5m;

server {
  listen 80;
  server_name localhost;

  client_max_body_size 1000M;

  #add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
  #expires off;

  #add_header Access-Control-Allow-Origin "*";
  #add_header Access-Control-Allow-Methods "PUT, GET, POST, DELETE, OPTIONS";
  #add_header Access-Control-Allow-Headers "Origin, Accept, Content-Type, X-Requested-With, X-CSRF-Token";

  #error_log /var/log/nginx/error.log warn;
  #error_log /var/log/nginx/error.log debug;
  #error_log /var/log/nginx/debug.error.log debug;
  #access_log /var/log/nginx/access.log;

  resolver 127.0.0.11; # docker resolver

  location / {
    location ~* /job_queue/api/(.*?)/(.*) {
      proxy_pass http://job_queue:15672/api/$1/%2F/$2?$query_string;
    }
    location ~* /job_queue/(.*) {
      rewrite ^/job_queue/(.*)$ /$1 break;
      proxy_pass http://job_queue:15672;
    }

    location ~* /db/(.*) {
      rewrite ^/db/(.*)$ /$1 break;
      proxy_pass http://db:8080;
    }

    location /video-chunks/ {
      # NOTE: keep the order of following three lines
      set $target http://livestream_cache_and_chunker:6000;
      rewrite /video-chunks/(.*)$ /$1 break;
      proxy_pass $target$uri;
      #proxy_pass http://livestream_cache_and_chunker:6000/;
      proxy_cache off;
    }

    # old UI location, extracted API access for performance and development access for data pulling
    location /v1/api/mediaItems/ {
      # NOTE: keep the order of following three lines
      set $target db_rest_endpoint:80;
      rewrite /v1/api/(.*)$ /$1 break;
      proxy_pass http://$target$uri$is_args$args;

      # 5min proxy timeout
      proxy_send_timeout 300;
      proxy_read_timeout 300;
      send_timeout 300;

      proxy_cache off;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      expires off;
    }

    location /v1/api/newsItems/ {
      # NOTE: keep the order of following three lines
      set $target db_rest_endpoint:80;
      rewrite /v1/api/(.*)$ /$1 break;
      proxy_pass http://$target$uri$is_args$args;

      # 5min proxy timeout
      proxy_send_timeout 300;
      proxy_read_timeout 300;
      send_timeout 300;

      proxy_cache off;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      expires off;
    }

    location = /v1/api/namedEntities {
      # NOTE: keep the order of following three lines
      # set $target legacy_ui:80;
      # rewrite /v1/(.*)$ /$1 break;
      # proxy_pass http://$target$uri$is_args$args;

      # NOTE: keep the order of following three lines
      set $target db_rest_endpoint:80;
      rewrite /v1/api/(.*)$ /$1 break;
      proxy_pass http://$target$uri$is_args$args;

      add_header Cache-Control "no-cache, must-revalidate, max-age=0";

      # 5min proxy timeout
      proxy_send_timeout 300;
      proxy_read_timeout 300;
      send_timeout 300;

      proxy_cache entities_api;
      proxy_cache_use_stale updating;
      proxy_cache_lock on;
      proxy_cache_valid any 5m;
      proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
    }

    location /v1/api/ {
      # NOTE: keep the order of following three lines
      # set $target legacy_ui:80;
      # rewrite /v1/(.*)$ /$1 break;
      # proxy_pass http://$target$uri$is_args$args;

      # NOTE: keep the order of following three lines
      set $target db_rest_endpoint:80;
      rewrite /v1/api/(.*)$ /$1 break;
      proxy_pass http://$target$uri$is_args$args;

      add_header Cache-Control "no-cache, must-revalidate, max-age=0";

      # 5min proxy timeout
      proxy_send_timeout 300;
      proxy_read_timeout 300;
      send_timeout 300;

      proxy_cache off;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      expires off;
    }

    location = /v1 {
      add_header Content-Type text/html;
      return 200 "<!DOCTYPE html><html><head><script>window.location.href+='/';</script></head><body>Redirecting to <a href=\"/v1/\">/v1/</a></body></html>";
    }

    location /v1/ {
      # NOTE: keep the order of following three lines
      set $target legacy_ui:80;
      rewrite /v1/(.*)$ /$1 break;
      proxy_pass http://$target$uri$is_args$args;

      # 5min proxy timeout
      proxy_send_timeout 300;
      proxy_read_timeout 300;
      send_timeout 300;

      proxy_cache off;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      expires off;
    }

    # 5min proxy timeout
    proxy_send_timeout 300;
    proxy_read_timeout 300;
    send_timeout 300;

    #proxy_pass http://legacy_ui:80;
    set $target http://ui_stack:9000;
    proxy_pass $target$uri$is_args$args;

    proxy_cache off;

    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    expires off;
  }
}
